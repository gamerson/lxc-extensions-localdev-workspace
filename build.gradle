createDockerContainer {
	withEnvVar "KUBERNETES_SERVICE_HOST", "k3d-lxc-localdev-server-0"
	withEnvVar "KUBERNETES_SERVICE_PORT", "6443"
	withEnvVar "KUBERNETES_NAMESPACE", "default"
  new ByteArrayOutputStream().withStream { output ->
    exec {
      commandLine "sh", "-c", "kubectl get secret --field-selector type=kubernetes.io/service-account-token -o jsonpath='{.items[0].data.ca\\.crt}' | base64 --decode"
      standardOutput = output
    }
    withEnvVar "KUBERNETES_CERTIFICATE", output.toString()
  }
  new ByteArrayOutputStream().withStream { output ->
    exec {
      commandLine "sh", "-c", "kubectl get secret --field-selector type=kubernetes.io/service-account-token -o jsonpath='{.items[0].data.token}' | base64 --decode"
      standardOutput = output
    }
    withEnvVar "KUBERNETES_TOKEN", output.toString()
  }
  hostConfig.network = "k3d-lxc-localdev"
}

project.afterEvaluate {
  def ignoredTask = tasks.findByPath(":extensions:able-theme-css:deploy")
  buildDockerImage.dependsOn = buildDockerImage.dependsOn.findAll { !it.equals(ignoredTask) }
  buildDockerImage.pull = false
}